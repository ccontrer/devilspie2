.TH devilspie2 1 "6 October 2011" "Version 0.01"
.sh NAME
Devilspie2 - perform scripted actions on windows as they are created
.SH Description
.B Devilspie2
is a program that detects windows as they are created, and performs scripted
actions on them. The scripts are written in LUA, allowing a great deal of
customization.
.SH Options
.IP "--version"
Displays the version of Devilspie2.
.IP "--folder folder"
Sets the folder where the LUA scripts are loaded from.
.IP "--debug"
Shows debug information from the LUA scripts. If debug_print is used in the LUA
scripts, that output will only be printed to stdout if this option is used.
.IP "--emulate"
Emulate script behaviour. Using this option only emulates a scripts behaviour, 
and doesn't affect the windows that the scripts otherwise would modify.
.SH Script Commands

.IP "get_window_name()"
returns a string containing the name of the current window.

.IP "get_application_name()"
returns the application name of the current window.

.IP "set_window_position(xpos, ypos)"
Sets the position of a window.

.IP "set_window_size(xsize, ysize)"
Sets the size of a window.

.IP "set_window_geometry(xpos, ypos, xsize ysize)"
Set the geometry of a window.

.IP "make_always_on_top()"
Set the windows always on top flag.

.IP "set_on_top()"
Sets a window on top of the others (this will however not lock the window in 
this position).

.IP "debug_print()"
Debug helper that prints a string to stdout. It is only printed if devilspie2
is run with the --debug option.

.IP "shade()"
"Shades" a window, showing only the title-bar.

.IP "unshade()"
Unshades a window - the opposite of "shade"

.IP "maximize()"
maximizes a window

.IP "unmaximize()"
unmaximizes a window

.IP "maximize_vertically()"
maximizes the current window vertically.

.IP "maximize_horisontally()"
maximizes the current window horisontally.


.IP "minimize()"
minimizes a window

.IP "unminimize()"
unminimizes a window, that is bringing it back to screen from the minimized
position/size.

.IP "decorate_window()"
Shows all window decoration.

.IP "undecorate_window()"
Removes all window decorations.

.IP "set_workspace(number)"
Moves a window to another workspace. The number variable starts counting at 1.

.IP "change_workspace(number)"
Changes the current workspace to another. The number variable starts counting at
1.

.IP "pin_window()"
asks the window manager to put the window on all workspaces.

.IP "unpin_window()"
Asks the window manager to put window only in the currently active workspace.

.IP "stick_window()"
Asks the window manager to keep the window's position fixed on the screen, even 
when the workspace or viewport scrolls. 

.IP "unstick_window()"
Asks the window manager to not have window's position fixed on the screen when 
the workspace or viewport scrolls. 

.SH Author
.B Devilspie2
was written by Andreas RÃ¶nnquist <gusnan@gusnan.se>.